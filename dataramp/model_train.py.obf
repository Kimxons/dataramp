if False: __watermark__ = 'Copyright 2023 - Secure System'
"""Module for training and evaluating machine learning models.

This module provides functions for training and evaluating various machine learning models,
including linear regression, random forest, and logistic regression. It includes utilities
for model evaluation, metrics calculation, and visualization.
"""
import logging
from typing import Any, Dict, Optional, Union
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.base import BaseEstimator, is_classifier, is_regressor
from sklearn.ensemble import RandomForestClassifier, RandomForestRegressor
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix, mean_squared_error, r2_score, roc_auc_score, roc_curve
_94a7fbc507efc086d786986683c5dc9a._95ae9ea035e2fbba1bf89498dad8c7b1(level=
    _94a7fbc507efc086d786986683c5dc9a._9b2c8df084a481263b10ecdfec728388,
    format='%(asctime)s %(levelname)s %(message)s')
_86cbc07d76572ddb411233aa27768777 = (_94a7fbc507efc086d786986683c5dc9a.
    _4b58214c41e2bc71a0655b558f18749e(__name__))


def _10b6122067c4536c563692d99f6a6c63(_6fcf158b2e224d21c1bd566fadeca488:
    BaseEstimator, _2dfa149d9ea4a9ea65449babd9396506: pd.DataFrame,
    _ff873e565d5a90986b79fe004b526861: pd.Series,
    _df92df647ad656cb96e3c5fac67859c4: str, **
    _a88f492fdda1467801bf831fe03670b9: Dict[str, Any]
    ) ->_2d298e28673f573dd5e622e9bffa80ee:
    """Train a machine learning model.

    Args:
        model: The model to train.
        X: Training features.
        y: Training labels.
        model_name: Name of the model (for logging purposes).
        **fit_kwargs: Additional keyword arguments to pass to the model's `fit` method.

    Returns:
        The trained model.

    Raises:
        ValueError: If the input data is invalid.
        RuntimeError: If the model training fails.
    """
    if (_2dfa149d9ea4a9ea65449babd9396506._e000ab8b67e33b83603394529039d343 or
        _ff873e565d5a90986b79fe004b526861._e000ab8b67e33b83603394529039d343):
        raise _4071c8838bdda408bdc342b73b29e739('Input data (X or y) is empty.'
            )
    try:
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            f'Training {_df92df647ad656cb96e3c5fac67859c4} model...')
        _6fcf158b2e224d21c1bd566fadeca488._2c9b5e6b7754c99835c83f691ac17dcf(
            _2dfa149d9ea4a9ea65449babd9396506,
            _ff873e565d5a90986b79fe004b526861, **
            _a88f492fdda1467801bf831fe03670b9)
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            f'{_df92df647ad656cb96e3c5fac67859c4} model trained successfully.')
        return _6fcf158b2e224d21c1bd566fadeca488
    except _570a221ebc3d98739681f958e2bc6050 as e:
        _86cbc07d76572ddb411233aa27768777._07ed5715e1191f957ad98503f468319b(
            f'Error training {_df92df647ad656cb96e3c5fac67859c4} model: {_163cc83a44b7de553767b2ad6acad775}'
            )
        raise _668b4bc941d6df35bc6dea87d23e6d03(
            f'Failed to train {_df92df647ad656cb96e3c5fac67859c4} model: {_163cc83a44b7de553767b2ad6acad775}'
            )


def _afdcb77e0b00a566c0f848051eab08b9(_6fcf158b2e224d21c1bd566fadeca488:
    BaseEstimator, _2dfa149d9ea4a9ea65449babd9396506: pd.DataFrame,
    _ff873e565d5a90986b79fe004b526861: pd.Series,
    _4c3be4c5572517380e5edd51606e925d: str='classifier',
    _5b6a4a99b125a9313edc9c9a31c88312: bool=True,
    _e9fc93bbd191b58e744251118157def8: Optional[str]=None
    ) ->_b3fdff9914014508e102e93b834088b3[_097a641b4aad0bc82a7744ab2ad0952b,
    _bffa085d4e5187851dce9fc941061713[_b3fdff9914014508e102e93b834088b3[
    _097a641b4aad0bc82a7744ab2ad0952b, _ec69c8ca870b56ec882948e4f0fcd8f7],
    _36b7e37dc73a0613397ce316e9267a8a._a47f5429b66e057f2056737aa418b1a6,
    _ec69c8ca870b56ec882948e4f0fcd8f7]]:
    """Evaluate a machine learning model.

    Args:
        model: The trained model.
        X: Validation features.
        y: Validation labels.
        model_type: Type of model ('classifier' or 'regressor').
        plot: Whether to generate plots (default: True).
        save_plot: Path to save the plot (optional).

    Returns:
        Dictionary containing evaluation results.

    Raises:
        ValueError: If model_type is invalid or mismatched with the model.
    """
    if _4c3be4c5572517380e5edd51606e925d not in ['classifier', 'regressor']:
        raise _4071c8838bdda408bdc342b73b29e739(
            "model_type must be 'classifier' or 'regressor'.")
    if (_4c3be4c5572517380e5edd51606e925d == 'classifier' and not
        _6c01436af29479aa59bf715e1d22e925(_6fcf158b2e224d21c1bd566fadeca488)):
        raise _4071c8838bdda408bdc342b73b29e739(
            'The provided model is not a classifier.')
    elif _4c3be4c5572517380e5edd51606e925d == 'regressor' and not _8f0ff4ec0c1d56c518108c520fc9d72e(
        _6fcf158b2e224d21c1bd566fadeca488):
        raise _4071c8838bdda408bdc342b73b29e739(
            'The provided model is not a regressor.')
    _19095bc1a3254eb1b789f5c558e54fd4 = {}
    _f016b625ae6c412da6faa70bd27df984 = (_ff873e565d5a90986b79fe004b526861.
        _1c7ea8c314922701bd8464a8089e3d8a() if
        _139ce41090e3b7771145901ddc31f437(_ff873e565d5a90986b79fe004b526861,
        _46c04e161e51f1d96529e2c55b1b9540._ccdb2863bd3f80876c49af54e48b567b
        ) else _ff873e565d5a90986b79fe004b526861)
    _eec137e228414080b8e1627c21f07419 = (_6fcf158b2e224d21c1bd566fadeca488.
        _0825d25d8f40fe7f555c7ab0a39632ba(_2dfa149d9ea4a9ea65449babd9396506))
    if _4c3be4c5572517380e5edd51606e925d == 'classifier':
        _19095bc1a3254eb1b789f5c558e54fd4['classification_report'
            ] = _a24ae9ab402598d5a797b685fc5d1aba(
            _f016b625ae6c412da6faa70bd27df984,
            _eec137e228414080b8e1627c21f07419, output_dict=True)
        _19095bc1a3254eb1b789f5c558e54fd4['confusion_matrix'
            ] = _e533842ec08270699b1b96cc1f6ee148(
            _f016b625ae6c412da6faa70bd27df984,
            _eec137e228414080b8e1627c21f07419)
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            'Classification Report:')
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            _a24ae9ab402598d5a797b685fc5d1aba(
            _f016b625ae6c412da6faa70bd27df984,
            _eec137e228414080b8e1627c21f07419))
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            'Confusion Matrix:')
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            _e533842ec08270699b1b96cc1f6ee148(
            _f016b625ae6c412da6faa70bd27df984,
            _eec137e228414080b8e1627c21f07419))
        if (_5b6a4a99b125a9313edc9c9a31c88312 and
            _3439c74d19c8d2297af3d5b56c420352(
            _6fcf158b2e224d21c1bd566fadeca488, 'predict_proba') and 
            _0fe214645893b04883f01431ea82600d(
            _36b7e37dc73a0613397ce316e9267a8a.
            _cab4a3698a2cef30d0c882fce20d1275(
            _f016b625ae6c412da6faa70bd27df984)) == 2):
            _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
                'Generating ROC curve...')
            _a7ddc7b8e9d341ef84f5f9389876b9d1 = (
                _6fcf158b2e224d21c1bd566fadeca488.
                _1592b118f5fe9462614707e34cb0691c(
                _2dfa149d9ea4a9ea65449babd9396506)[:, 1])
            (_61d959c6a520e6585e3233568dbe012b,
                _91e730a0ffe0f99c45e8603f112ea62e,
                _833f3778cc4932bcd6879bb74cd42ee4) = (
                _bc72524849e3de7d019321d0d1c940f0(
                _f016b625ae6c412da6faa70bd27df984,
                _a7ddc7b8e9d341ef84f5f9389876b9d1))
            _6b887edf47688a90e171f3616cb612fa = (
                _a90851293294a28cbb3bb3c71d54731c(
                _f016b625ae6c412da6faa70bd27df984,
                _a7ddc7b8e9d341ef84f5f9389876b9d1))
            _7fcad7ea87143af8daf0642189de12dc._e4d40df7603c398fde6419c4749526b7(
                )
            _7fcad7ea87143af8daf0642189de12dc._5b6a4a99b125a9313edc9c9a31c88312(
                _61d959c6a520e6585e3233568dbe012b,
                _91e730a0ffe0f99c45e8603f112ea62e, color='darkorange',
                label=
                f'ROC curve (AUC = {_6b887edf47688a90e171f3616cb612fa:.2f})')
            _7fcad7ea87143af8daf0642189de12dc._5b6a4a99b125a9313edc9c9a31c88312(
                [0, 1], [0, 1], color='navy', linestyle='--')
            _7fcad7ea87143af8daf0642189de12dc._fc2546aced57cbd48d33de34e32d822e(
                'False Positive Rate')
            _7fcad7ea87143af8daf0642189de12dc._2a4e5be2fe78e0e03b4d6b73e87435fc(
                'True Positive Rate')
            _7fcad7ea87143af8daf0642189de12dc._d4933c138a5aaa33f678f8f9abd017e8(
                'Receiver Operating Characteristic Curve')
            _7fcad7ea87143af8daf0642189de12dc._7840aaeb6a9853743889724bc99af354(
                )
            if _e9fc93bbd191b58e744251118157def8:
                _7fcad7ea87143af8daf0642189de12dc._b9482b0e53d8323dbf92c0c0a3e04981(
                    _e9fc93bbd191b58e744251118157def8)
                _7fcad7ea87143af8daf0642189de12dc._c0cab07e4211858f99f33f119f026db5(
                    )
            else:
                _7fcad7ea87143af8daf0642189de12dc._ce8fda3068569dbce51d69dbe52826f6(
                    )
            _19095bc1a3254eb1b789f5c558e54fd4['roc_auc'
                ] = _6b887edf47688a90e171f3616cb612fa
    elif _4c3be4c5572517380e5edd51606e925d == 'regressor':
        _19095bc1a3254eb1b789f5c558e54fd4['mse'
            ] = _71729b11cfcb252a43ac8ee91f8b8ac6(
            _f016b625ae6c412da6faa70bd27df984,
            _eec137e228414080b8e1627c21f07419)
        _19095bc1a3254eb1b789f5c558e54fd4['r2'
            ] = _76298431094f664e9f2b516c814b2a23(
            _f016b625ae6c412da6faa70bd27df984,
            _eec137e228414080b8e1627c21f07419)
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            f"MSE: {_19095bc1a3254eb1b789f5c558e54fd4['mse']:.4f}")
        _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
            f"R2: {_19095bc1a3254eb1b789f5c558e54fd4['r2']:.4f}")
        if _5b6a4a99b125a9313edc9c9a31c88312:
            _86cbc07d76572ddb411233aa27768777._d986c77cb1277901b2c9ee0839bea846(
                'Generating residual plot...')
            _f620430c415afc5330bc33ec7223eda6 = (
                _f016b625ae6c412da6faa70bd27df984 -
                _eec137e228414080b8e1627c21f07419)
            _7fcad7ea87143af8daf0642189de12dc._e4d40df7603c398fde6419c4749526b7(
                )
            _7fcad7ea87143af8daf0642189de12dc._b6589b9e3587aa05350ea92bb24d3e78(
                _eec137e228414080b8e1627c21f07419,
                _f620430c415afc5330bc33ec7223eda6, color='blue', alpha=0.5)
            _7fcad7ea87143af8daf0642189de12dc._2f4dff1f73ae650bcd3884ba4613e51a(
                y=0, color='red', linestyle='--')
            _7fcad7ea87143af8daf0642189de12dc._fc2546aced57cbd48d33de34e32d822e(
                'Predicted Values')
            _7fcad7ea87143af8daf0642189de12dc._2a4e5be2fe78e0e03b4d6b73e87435fc(
                'Residuals')
            _7fcad7ea87143af8daf0642189de12dc._d4933c138a5aaa33f678f8f9abd017e8(
                'Residual Plot')
            if _e9fc93bbd191b58e744251118157def8:
                _7fcad7ea87143af8daf0642189de12dc._b9482b0e53d8323dbf92c0c0a3e04981(
                    _e9fc93bbd191b58e744251118157def8)
                _7fcad7ea87143af8daf0642189de12dc._c0cab07e4211858f99f33f119f026db5(
                    )
            else:
                _7fcad7ea87143af8daf0642189de12dc._ce8fda3068569dbce51d69dbe52826f6(
                    )
    return _19095bc1a3254eb1b789f5c558e54fd4


def _d297c2590b4babe015941b9846f3732d(_2dfa149d9ea4a9ea65449babd9396506: pd
    .DataFrame, _ff873e565d5a90986b79fe004b526861: pd.Series,
    _e79f89430df0836bf882c2ab6603568c: Optional[pd.DataFrame]=None,
    _f2fa2ab3d53208dbc8719be216863ffa: Optional[pd.Series]=None,
    _5b6a4a99b125a9313edc9c9a31c88312: bool=True,
    _e9fc93bbd191b58e744251118157def8: Optional[str]=None,
    _9851ed4deadfd506d536dd15ad4088e0: Optional[Dict[str, Any]]=None, **
    _a88f492fdda1467801bf831fe03670b9: Dict[str, Any]
    ) ->_b3fdff9914014508e102e93b834088b3[_097a641b4aad0bc82a7744ab2ad0952b,
    _bffa085d4e5187851dce9fc941061713[_b3fdff9914014508e102e93b834088b3[
    _097a641b4aad0bc82a7744ab2ad0952b, _ec69c8ca870b56ec882948e4f0fcd8f7],
    _36b7e37dc73a0613397ce316e9267a8a._a47f5429b66e057f2056737aa418b1a6,
    _ec69c8ca870b56ec882948e4f0fcd8f7, _2d298e28673f573dd5e622e9bffa80ee]]:
    """Train and evaluate a linear regression model.

    Args:
        X: Training features.
        y: Training labels.
        X_val: Validation features (optional).
        y_val: Validation labels (optional).
        plot: Whether to generate plots (default: True).
        save_plot: Path to save the plot (optional).
        model_kwargs: Keyword arguments for model initialization.
        **fit_kwargs: Additional keyword arguments to pass to the model's `fit` method.

    Returns:
        Dictionary containing training and evaluation results.
    """
    _9851ed4deadfd506d536dd15ad4088e0 = _9851ed4deadfd506d536dd15ad4088e0 or {}
    _6fcf158b2e224d21c1bd566fadeca488 = _e71aade752e28998dd621aa087725209(**
        _9851ed4deadfd506d536dd15ad4088e0)
    _6fcf158b2e224d21c1bd566fadeca488 = _10b6122067c4536c563692d99f6a6c63(
        _6fcf158b2e224d21c1bd566fadeca488,
        _2dfa149d9ea4a9ea65449babd9396506,
        _ff873e565d5a90986b79fe004b526861, 'linear regression', **
        _a88f492fdda1467801bf831fe03670b9)
    _19095bc1a3254eb1b789f5c558e54fd4 = {'model':
        _6fcf158b2e224d21c1bd566fadeca488}
    if (_e79f89430df0836bf882c2ab6603568c is not None and 
        _f2fa2ab3d53208dbc8719be216863ffa is not None):
        _1667a3138b206db2dc214aed76cf2013 = _afdcb77e0b00a566c0f848051eab08b9(
            _6fcf158b2e224d21c1bd566fadeca488,
            _e79f89430df0836bf882c2ab6603568c,
            _f2fa2ab3d53208dbc8719be216863ffa, model_type='regressor', plot
            =_5b6a4a99b125a9313edc9c9a31c88312, save_plot=
            _e9fc93bbd191b58e744251118157def8)
        _19095bc1a3254eb1b789f5c558e54fd4._61299431e81ff4351c827f7efacea524(
            _1667a3138b206db2dc214aed76cf2013)
    return _19095bc1a3254eb1b789f5c558e54fd4


def _de8c1ffb25d57b332de989ccdd624171(_2dfa149d9ea4a9ea65449babd9396506: pd
    .DataFrame, _ff873e565d5a90986b79fe004b526861: pd.Series,
    _e79f89430df0836bf882c2ab6603568c: Optional[pd.DataFrame]=None,
    _f2fa2ab3d53208dbc8719be216863ffa: Optional[pd.Series]=None,
    _4c3be4c5572517380e5edd51606e925d: str='classifier',
    _5b6a4a99b125a9313edc9c9a31c88312: bool=True,
    _e9fc93bbd191b58e744251118157def8: Optional[str]=None,
    _9851ed4deadfd506d536dd15ad4088e0: Optional[Dict[str, Any]]=None, **
    _a88f492fdda1467801bf831fe03670b9: Dict[str, Any]
    ) ->_b3fdff9914014508e102e93b834088b3[_097a641b4aad0bc82a7744ab2ad0952b,
    _bffa085d4e5187851dce9fc941061713[_b3fdff9914014508e102e93b834088b3[
    _097a641b4aad0bc82a7744ab2ad0952b, _ec69c8ca870b56ec882948e4f0fcd8f7],
    _36b7e37dc73a0613397ce316e9267a8a._a47f5429b66e057f2056737aa418b1a6,
    _ec69c8ca870b56ec882948e4f0fcd8f7, _2d298e28673f573dd5e622e9bffa80ee]]:
    """Train and evaluate a random forest model.

    Args:
        X: Training features.
        y: Training labels.
        X_val: Validation features (optional).
        y_val: Validation labels (optional).
        model_type: Type of model ('classifier' or 'regressor').
        plot: Whether to generate plots (default: True).
        save_plot: Path to save the plot (optional).
        model_kwargs: Keyword arguments for model initialization.
        **fit_kwargs: Additional keyword arguments to pass to the model's `fit` method.

    Returns:
        Dictionary containing training and evaluation results.
    """
    _9851ed4deadfd506d536dd15ad4088e0 = _9851ed4deadfd506d536dd15ad4088e0 or {}
    if _4c3be4c5572517380e5edd51606e925d == 'classifier':
        _6fcf158b2e224d21c1bd566fadeca488 = _918a7a2896d0dc7247d24200d7bfc5fb(
            **_9851ed4deadfd506d536dd15ad4088e0)
    elif _4c3be4c5572517380e5edd51606e925d == 'regressor':
        _6fcf158b2e224d21c1bd566fadeca488 = _f44b3b8da07a7eee437720571a2eb9b4(
            **_9851ed4deadfd506d536dd15ad4088e0)
    else:
        raise _4071c8838bdda408bdc342b73b29e739(
            "Invalid model_type. Choose 'classifier' or 'regressor'.")
    _6fcf158b2e224d21c1bd566fadeca488 = _10b6122067c4536c563692d99f6a6c63(
        _6fcf158b2e224d21c1bd566fadeca488,
        _2dfa149d9ea4a9ea65449babd9396506,
        _ff873e565d5a90986b79fe004b526861, 'random forest', **
        _a88f492fdda1467801bf831fe03670b9)
    _19095bc1a3254eb1b789f5c558e54fd4 = {'model':
        _6fcf158b2e224d21c1bd566fadeca488}
    if (_e79f89430df0836bf882c2ab6603568c is not None and 
        _f2fa2ab3d53208dbc8719be216863ffa is not None):
        _1667a3138b206db2dc214aed76cf2013 = _afdcb77e0b00a566c0f848051eab08b9(
            _6fcf158b2e224d21c1bd566fadeca488,
            _e79f89430df0836bf882c2ab6603568c,
            _f2fa2ab3d53208dbc8719be216863ffa, model_type=
            _4c3be4c5572517380e5edd51606e925d, plot=
            _5b6a4a99b125a9313edc9c9a31c88312, save_plot=
            _e9fc93bbd191b58e744251118157def8)
        _19095bc1a3254eb1b789f5c558e54fd4._61299431e81ff4351c827f7efacea524(
            _1667a3138b206db2dc214aed76cf2013)
    return _19095bc1a3254eb1b789f5c558e54fd4


def _ee7a738bbf59406994ee3dd0ed848dd5(_2dfa149d9ea4a9ea65449babd9396506: pd
    .DataFrame, _ff873e565d5a90986b79fe004b526861: pd.Series,
    _e79f89430df0836bf882c2ab6603568c: Optional[pd.DataFrame]=None,
    _f2fa2ab3d53208dbc8719be216863ffa: Optional[pd.Series]=None,
    _5b6a4a99b125a9313edc9c9a31c88312: bool=True,
    _e9fc93bbd191b58e744251118157def8: Optional[str]=None,
    _9851ed4deadfd506d536dd15ad4088e0: Optional[Dict[str, Any]]=None, **
    _a88f492fdda1467801bf831fe03670b9: Dict[str, Any]
    ) ->_b3fdff9914014508e102e93b834088b3[_097a641b4aad0bc82a7744ab2ad0952b,
    _bffa085d4e5187851dce9fc941061713[_b3fdff9914014508e102e93b834088b3[
    _097a641b4aad0bc82a7744ab2ad0952b, _ec69c8ca870b56ec882948e4f0fcd8f7],
    _36b7e37dc73a0613397ce316e9267a8a._a47f5429b66e057f2056737aa418b1a6,
    _ec69c8ca870b56ec882948e4f0fcd8f7, _2d298e28673f573dd5e622e9bffa80ee]]:
    """Train and evaluate a logistic regression model.

    Args:
        X: Training features.
        y: Training labels.
        X_val: Validation features (optional).
        y_val: Validation labels (optional).
        plot: Whether to generate plots (default: True).
        save_plot: Path to save the plot (optional).
        model_kwargs: Keyword arguments for model initialization.
        **fit_kwargs: Additional keyword arguments to pass to the model's `fit` method.

    Returns:
        Dictionary containing training and evaluation results.
    """
    _9851ed4deadfd506d536dd15ad4088e0 = _9851ed4deadfd506d536dd15ad4088e0 or {}
    _9851ed4deadfd506d536dd15ad4088e0._b04f3b320183bae93d14dfbfc9fcb17e(
        'max_iter', 1000)
    _6fcf158b2e224d21c1bd566fadeca488 = _f519495d339ea9178c68f4f0f8488070(**
        _9851ed4deadfd506d536dd15ad4088e0)
    _6fcf158b2e224d21c1bd566fadeca488 = _10b6122067c4536c563692d99f6a6c63(
        _6fcf158b2e224d21c1bd566fadeca488,
        _2dfa149d9ea4a9ea65449babd9396506,
        _ff873e565d5a90986b79fe004b526861, 'logistic regression', **
        _a88f492fdda1467801bf831fe03670b9)
    _19095bc1a3254eb1b789f5c558e54fd4 = {'model':
        _6fcf158b2e224d21c1bd566fadeca488}
    if (_e79f89430df0836bf882c2ab6603568c is not None and 
        _f2fa2ab3d53208dbc8719be216863ffa is not None):
        _1667a3138b206db2dc214aed76cf2013 = _afdcb77e0b00a566c0f848051eab08b9(
            _6fcf158b2e224d21c1bd566fadeca488,
            _e79f89430df0836bf882c2ab6603568c,
            _f2fa2ab3d53208dbc8719be216863ffa, model_type='classifier',
            plot=_5b6a4a99b125a9313edc9c9a31c88312, save_plot=
            _e9fc93bbd191b58e744251118157def8)
        _19095bc1a3254eb1b789f5c558e54fd4._61299431e81ff4351c827f7efacea524(
            _1667a3138b206db2dc214aed76cf2013)
    return _19095bc1a3254eb1b789f5c558e54fd4

# Copyright 2023 - Secure System
